- name: Deploy to EC2
  hosts: localhost
  connection: local

  tasks:
    - name: Gathering info
      vars:
        ansible_python_interpreter: /usr/local/bin/python3
      ec2_instance_info:
        region: us-east-1
        aws_access_key: ASIARIV6EYMEGIIYR25Y
        aws_secret_key: LWAem0pBEJTzp97F/JCgLOZTlXFpDob/bq5Sq0a0
        security_token: FwoGZXIvYXdzEAsaDLQzHz+3ZvgcltgKdSLCAYcQAsX7on3F7wQp3NmJjsLv+UvOSfmflcJgD+nTPKa610CmJ+zPUKFJZjxBPYtSOYO8TV1WXZx/c3I6exOtGLVqBi04MdAod4hDgPAaf80Oe0m+yQ85mW32T0dh4yqAofQWmij90SbBKRIuzRDIMvm+vCbe3nHTAbIiE5uGssXG9iOya1cGCa0s0ZpOM68qUm5yeo15LcNxqhIoppeObWCF+Mf7tSCIHkqwm5PWcuRh2vv4P8SjHWc6e82KrufJ38NsKM3zhv8FMi2xuto0gcdx8qbgGmzpGk2/ufNBMAGsgeKUEBaSSI0aQh92PzsRNyltDKuqMKc=
      register: ec2_info
      
    - name: Lauanch EC2 instance
      ec2:
        instance_type: t2.small
        image: ami-00ddb0e5626798373
        region: us-east-1
        key_name: test1
        vpc_subnet_id: subnet-63b87052
        assign_public_ip: yes
        wait: yes
        count: 1
        group: eshop
        aws_access_key: ASIARIV6EYMEGIIYR25Y
        aws_secret_key: LWAem0pBEJTzp97F/JCgLOZTlXFpDob/bq5Sq0a0
        security_token: FwoGZXIvYXdzEAsaDLQzHz+3ZvgcltgKdSLCAYcQAsX7on3F7wQp3NmJjsLv+UvOSfmflcJgD+nTPKa610CmJ+zPUKFJZjxBPYtSOYO8TV1WXZx/c3I6exOtGLVqBi04MdAod4hDgPAaf80Oe0m+yQ85mW32T0dh4yqAofQWmij90SbBKRIuzRDIMvm+vCbe3nHTAbIiE5uGssXG9iOya1cGCa0s0ZpOM68qUm5yeo15LcNxqhIoppeObWCF+Mf7tSCIHkqwm5PWcuRh2vv4P8SjHWc6e82KrufJ38NsKM3zhv8FMi2xuto0gcdx8qbgGmzpGk2/ufNBMAGsgeKUEBaSSI0aQh92PzsRNyltDKuqMKc=
      register: ec2

    - name: Add instance host to group
      add_host: hostname={{ item.public_dns_name }} groupname=launched
      with_items: '{{ec2.instances}}'

    - name: Wait for SSH connection
      wait_for: host={{ item.public_dns_name }} port=22 delay=30 timeout=300 state=started
      with_items: '{{ec2.instances}}'
      
- name: Exterminate
  hosts: localhost
  connection: local

  tasks:
    - name: Exterminate
      ec2:
        region: us-east-1
        state: 'absent'
        instance_ids: '{{ item.instance_id }}'
        aws_access_key: ASIARIV6EYMEGIIYR25Y
        aws_secret_key: LWAem0pBEJTzp97F/JCgLOZTlXFpDob/bq5Sq0a0
        security_token: FwoGZXIvYXdzEAsaDLQzHz+3ZvgcltgKdSLCAYcQAsX7on3F7wQp3NmJjsLv+UvOSfmflcJgD+nTPKa610CmJ+zPUKFJZjxBPYtSOYO8TV1WXZx/c3I6exOtGLVqBi04MdAod4hDgPAaf80Oe0m+yQ85mW32T0dh4yqAofQWmij90SbBKRIuzRDIMvm+vCbe3nHTAbIiE5uGssXG9iOya1cGCa0s0ZpOM68qUm5yeo15LcNxqhIoppeObWCF+Mf7tSCIHkqwm5PWcuRh2vv4P8SjHWc6e82KrufJ38NsKM3zhv8FMi2xuto0gcdx8qbgGmzpGk2/ufNBMAGsgeKUEBaSSI0aQh92PzsRNyltDKuqMKc=
   
      loop: "{{ ec2_info.instances }}"
      loop_control:
        label: "{{ item.instance_id }}"
        
- name: Configure EC2
  hosts: launched
  connection: ssh

  tasks:
    - name: Install docker
      apt:
        name: docker.io
        state: present
        update_cache: yes
      become: yes
    - service:
        name: docker
        state: started
        enabled: yes
      become: yes
    - name: Get project files from git
      git:
        repo: 'https://github.com/dufa00/4IT572_semestralka.git'
        dest: ./app
    - name: Build Docker with eshop
      shell: cd app && docker build -t myeshop:latest .
      become: yes
    - name: Run Docker with eshop
      shell: docker run -p 80:3000 myeshop
      async: 365
      poll: 10
      become: yes
    - wait_for:
        port: 80







